html,
body {
  height: 100%;
  margin: 0;
}

.groceryListPage {
  width: 100%;
  height: 100%;
}

.mainContainer {
  display: flex;
  flex-direction: row; /* Children side by side */
  width: 100%;
  height: 100%; /* Ensure it takes up the full height */
}

.filtersAndListContainer {
  flex: 3; /* Left side takes up 75% */
  margin-right: 20px; /* Margin to add spacing */
  display: flex;
  flex-direction: column; /* Stack filters and grocery list vertically */
  height: 100%; /* Ensure it takes full height */
}

.filtersContainer {
  padding: 20px;
  display: flex;
  flex-direction: column; /* Stack the input and buttons */
}

.filterInput {
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  font-size: 1.2rem;
}

.filterButtons {
  display: flex;
  gap: 10px;
}

.filterButton {
  background-color: #6b774a;
  border-radius: 15px;
  padding: 10px 15px;
  border: none;
  font-size: 1.2rem;
  cursor: pointer;
}

.groceryListContainer {
  padding: 20px;
  background-color: #D9D9D9;
  border-radius: 15px;
  flex-grow: 1; /* List container expands fully */
  overflow-y: auto; /* Scroll if list is too long */
  margin-top: 10px; /* Space between filters and list */
}

.groceryListItem {
  display: flex;
  align-items: center;
  margin-bottom: 10px; /* Space between items */
  transition: transform 0.2s; /* Smooth transition for transform property */
  cursor: pointer; /* Change cursor to pointer on hover */
  padding: 10px; /* Increase padding for the entire item */
  border-bottom: 1px solid black; /* Horizontal line between items */
}

.groceryListItem:hover {
  transform: scale(1.02); /* Slightly scale up the item on hover */
  background-color: rgba(0, 0, 0, 0.1); /* Optional: Add a light background on hover */
}

.groceryListItem:last-child {
  border-bottom: none; /* Remove border for the last item */
}


.groceryListItem input[type="checkbox"] {
  appearance: none; /* Remove default styling */
  width: 20px; /* Set width for circular checkbox */
  height: 20px; /* Set height for circular checkbox */
  border-radius: 50%; /* Make it circular */
  border: 2px solid #2d702f; /* Smaller border color */
  outline: none; /* Remove outline */
  cursor: pointer; /* Pointer cursor on hover */
  position: relative; /* For positioning the check mark */
  margin-right: 10px; /* Space between checkbox and label */
}

.groceryListItem input[type="checkbox"]:checked {
  background-color: transparent; /* No fill in the checkbox */
}

.groceryListItem input[type="checkbox"]:checked::after {
  content: ""; /* Create a pseudo-element */
  position: absolute; /* Positioning */
  top: 50%; /* Center vertically */
  left: 50%; /* Center horizontally */
  width: 14px; /* Size of the fill (80% of checkbox size) */
  height: 14px; /* Size of the fill (80% of checkbox size) */
  border-radius: 50%; /* Circular */
  background-color: #333; /* Dark fill color for checked state */
  transform: translate(-50%, -50%); /* Center it perfectly */
}

.groceryListItem span {
  transition: text-decoration 0.3s; /* Smooth transition for line-through */
  color: black; /* Set text color to black */
}

.groceryListItem input[type="checkbox"]:checked + span {
  text-decoration: line-through; /* Line through text when checked */
  color: #999; /* Optional: change text color when checked */
}


.groceryListItem span {
  transition: text-decoration 0.3s; /* Smooth transition for line-through */
}

.groceryListItem input[type="checkbox"]:checked + span {
  text-decoration: line-through; /* Line through text when checked */
  color: #999; /* Optional: change text color when checked */
}


.addItemContainer {
  flex: 1; /* Right side takes up 25% */
  background-color: #b0e0e6; /* Visible background */
  padding: 20px; /* Spacing inside the container */
  height: 100%; /* Ensure it spans full height */
}

h3 {
  font-size: 2rem;
}

.formGroup {
  margin-bottom: 15px;
  margin-right: 15px;
}

.formGroup label {
  display: block;
  margin-bottom: 5px;
  margin-right: 5px;
}

.formGroup input,
.formGroup textarea {
  width: 100%;
  padding: 10px;
  font-size: 1.2rem;
  border: none;
  border-radius: 10px;
  margin-right: 10px;
}

textarea {
  resize: none;
}

.buttonGroup {
  display: flex;
  justify-content: space-between;
}

.removeButton {
  background-color: #d4655b;
  padding: 10px 20px;
  border: none;
  color: white;
  font-size: 1rem;
  border-radius: 10px;
  cursor: pointer;
}

.addButton {
  background-color: #6bb56d;
  padding: 10px 20px;
  border: none;
  color: white;
  font-size: 1rem;
  border-radius: 10px;
  cursor: pointer;
}

.filterButton:hover,
.addButton:hover,
.removeButton:hover {
  opacity: 0.8;
}

.GLHeaderSearchBar {
  flex: 1;
  display: flex;
  background-color: #374d2b; /* Darker green background */
  border-radius: 10px; /* Rounded edges */
  padding: 0; /* Remove padding for a tighter fit */
  width: 100%; /* Ensure it fills the container */
  height: 40px; /* Adjust height as needed */
  align-items: center;
}

.GLHeaderSearchBar input {
  flex: 1; /* Make input fill available space */
  border: none; /* Remove input border */
  background-color: transparent; /* Make input transparent */
  color: white; /* Change text color to white */
  padding: 10px; /* Keep padding for usability */
  padding-top: 6px;
  line-height: 18px;
  border-radius: 10px; /* Match the border radius of the search bar */
  height: 40%; /* Make the input fill the height of the search bar */
  width: 40%;
  font-family: inherit; /* Inherit font family from parent */
  font-size: inherit; /* Inherit font size from parent */
  font-weight: inherit; /* Inherit font weight from parent */
}

.GLHeaderSearchBar input::placeholder {
  color: white; /* Make placeholder text white */
}



.navBar {
  width: 10%;
}